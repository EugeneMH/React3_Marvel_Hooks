{"version":3,"sources":["components/pages/SinglePage.js","components/error/error.gif","components/error/Error.js","hooks/http.hook.js","services/service.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","Component","dataType","id","useParams","useMarvelService","process","setProcess","clearError","getCharacterByName","getComic","useState","data","setData","useEffect","updateData","then","res","setContent","Error","style","src","img","alt","margin","height","width","display","color","textAlign","useHttp","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","results","map","_transformCharacter","getCharacter","_transformComics","getAllComics","comics","name","char","limitLetters","charDescription","description","length","slice","items","thumbnail","path","extension","homepage","urls","wiki","title","pageCount","price","prices","language","textObjects","Skeleton","props","className","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.aa462f56.chunk.js","sourcesContent":["import AppBanner from '../appBanner/AppBanner';\n\nimport setContent from '../../utils/setContent';\n\nimport { useParams } from 'react-router-dom';\nimport useMarvelService from '../../services/service';\nimport { useEffect, useState } from 'react';\n\nconst SinglePage = ({Component, dataType}) => {\n\n    const {id} = useParams();\n\n    const { process, setProcess, clearError, getCharacterByName, getComic} = useMarvelService();\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        updateData()\n    }, [id])\n\n    const updateData = () => {\n        clearError();\n        \n        // eslint-disable-next-line default-case\n        switch (dataType) {\n            case 'character':\n                getCharacterByName(id).then(res => setData(res))\n                .then(() => setProcess('confirmed'));\n                break;\n            case 'comic': \n                getComic(id).then(res => setData(res))\n                .then(() => setProcess('confirmed'));\n            }\n        \n    }\n\n    return (\n        <>\n            <AppBanner/>\n            {setContent(process, Component, data)}\n        </>\n    )\n}\n\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst Error = () => {\n    return (\n        <div style={{'display': 'flex', \n                     'flexDirection':'column',\n                     'fontWeight': 'bold',\n                     'fontSize': '18px',\n                     'lineHeight': '29px'}}>\n            <img src={img} alt=\"Error\" style={{margin:' 0 auto', \n            height:'250px', \n            width:'250px', \n            display:'block'}}/>\n            <span style={{color: '#9F0013', textAlign: 'center'}}>Something went wrong. Please try reloading the page</span>\n        </div>\n    )\n}\n\nexport default Error;","import {useState, useCallback} from 'react';\n\nconst useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {  \n                throw new Error(`Could not fetch${url}, status ${response.status}`);\n            }\n\n            const data = await response.json();\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, [])\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, [])\n\n    return { request, clearError, process, setProcess}\n}\n\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=ee5953dc31f3d6f456feeaafb26f8003';\n    const _baseOffset = 180;\n\n    \n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\n        return res.data.results.map(comics => _transformComics(comics));\n    }\n\n    const getCharacterByName = async (name) => {\n        try {\n            const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\n            return _transformCharacter(res.data.results[0], false);\n        } catch (e) {\n           return 'not found';\n        }\n    }\n\n    const _transformCharacter = (char, limitLetters = true) => {\n\n        let charDescription = char.description ? char.description : \"Unfortunately, we can't find the description of this character\"; \n\n        if (charDescription.length >= 200 && limitLetters) {\n            charDescription = charDescription.slice(0, 200) + '...';\n        }\n\n        return {\n            comics: char.comics.items,\n            id: char.id,\n            name: char.name,\n            description: charDescription,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            name: comics.title,\n            description: comics.description ? comics.description : 'There is no description of this comic' ,\n            pageCount: comics.pageCount ?  `${comics.pageCount} pages` : 'No information about the number of the pages',\n            url: comics.urls[0].url,\n            price: comics.prices[0].price,\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-rus'\n        }\n    }\n\n    return {\n        process,\n        setProcess,\n        getAllCharacters, \n        getCharacter, \n        getAllComics, \n        clearError, \n        getComic, \n        getCharacterByName}\n\n}\n\nexport default useMarvelService;","import './skeleton.scss';\n\nconst Skeleton = (props) => {\n    return (\n        <>\n            <p className=\"char__select\">{props.name}</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from \"../components/skeleton/Skeleton\";\nimport Error from \"../components/error/Error\";\nimport Spinner from \"../components/spinner/Spinner\";\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting': \n            return <Skeleton name=\"Please select a character to see information\"/>;\n        case 'loading':\n            return <Spinner/>;\n        case 'error':\n            return <Error/>;\n        case 'confirmed':\n            return <Component data={data}/>;\n        default: \n            throw new Error('Unexpected process state');\n    }\n}\n\nexport default setContent","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}