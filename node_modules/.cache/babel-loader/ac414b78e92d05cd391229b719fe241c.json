{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/React-Marvel/src/components/charSearch/CharSearch.js\",\n  _s = $RefreshSig$();\nimport useMarvelService from '../../services/service';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './charSearch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharSearch = () => {\n  _s();\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterByName,\n    clearError\n  } = useMarvelService();\n  const updateChar = name => {\n    clearError();\n    getCharacterByName(name).then(res => res ? setChar(res) : null);\n  };\n  const results = () => {\n    if (char === 'not found') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper__not-found\",\n        children: [\"The character was not found. Check the name and try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \"*The search is case-sensitive\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    } else if (char) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper__found\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Character found! Visit \", char.name, \"'s page?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `./characters/${char.name}`,\n          className: _ref => {\n            let {\n              isActive\n            } = _ref;\n            return {\n              color: isActive ? '#9F0013' : 'inherit'\n            };\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"To Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  const loadingMessage = loading ? 'loading...' : null;\n  const errorMessage = !loading && error ? 'error' : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        charName: ''\n      },\n      validationSchema: Yup.object({\n        charName: Yup.string().required('Obligatory field')\n      }),\n      onSubmit: _ref2 => {\n        let {\n          charName\n        } = _ref2;\n        updateChar(charName);\n      },\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"search\",\n          children: \"Or find a character by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"input\",\n            type: \"text\",\n            name: \"charName\",\n            id: \"charName\",\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(FormikErrorMessage, {\n          component: \"div\",\n          className: \"wrapper__not-found\",\n          name: \"charName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), results(), loadingMessage, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(CharSearch, \"rKKI6EzBaq1Mrm5UuOXddeQEnlY=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharSearch;\nexport default CharSearch;\nvar _c;\n$RefreshReg$(_c, \"CharSearch\");","map":{"version":3,"names":["useMarvelService","useState","NavLink","Formik","Form","Field","ErrorMessage","FormikErrorMessage","Yup","CharSearch","char","setChar","loading","error","getCharacterByName","clearError","updateChar","name","then","res","results","isActive","color","loadingMessage","errorMessage","charName","object","string","required","formik","handleSubmit"],"sources":["/Applications/MAMP/htdocs/React-Marvel/src/components/charSearch/CharSearch.js"],"sourcesContent":["import useMarvelService from '../../services/service';\n\nimport { useState } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage} from 'formik';\nimport * as Yup from 'yup';\n\nimport './charSearch.scss';\n\nconst CharSearch = () => {\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n    const updateChar = (name) => {\n        clearError()\n\n        getCharacterByName(name)\n            .then(res => res ? setChar(res): null)\n    }\n\n    const results = () => {\n        if (char === 'not found') {\n            return (\n                <div className=\"wrapper__not-found\">\n                    The character was not found. Check the name and try again. \n                    <br/>*The search is case-sensitive\n                </div> \n            )\n        } else if (char) {\n            return (\n                <div className=\"wrapper__found\">\n                    <div>Character found! Visit {char.name}'s page?</div>\n                    <NavLink \n                        to={`./characters/${char.name}`}\n                        className={({ isActive }) => \n                      ({color: isActive ? '#9F0013' : 'inherit'})}>\n                        <button className=\"button button__secondary\">\n                            <div className=\"inner\">To Page</div>\n                        </button>\n                    </NavLink>  \n                </div> \n            )\n        }\n    }   \n        \n    const loadingMessage = loading ? 'loading...' : null;\n    const errorMessage = !loading && error ? 'error' : null;\n        \n    return (\n        <div className='form'>\n            <Formik \n                initialValues={{\n                    charName: ''\n                }}\n                validationSchema={Yup.object({\n                    charName: Yup.string()\n                        .required('Obligatory field')\n                })}\n                onSubmit = {({charName}) => {\n                    updateChar(charName);\n                }}>\n                    {formik => (\n                        <Form onSubmit={formik.handleSubmit}>\n                            <label className=\"label\" htmlFor=\"search\">Or find a character by name:</label>\n                            <div className=\"wrapper\">\n                                <Field\n                                    className=\"input\"\n                                    type=\"text\"\n                                    name=\"charName\"\n                                    id=\"charName\"\n                                    placeholder=\"Enter name\"/>\n                                <button type=\"submit\" className=\"button button__main\">\n                                    <div className=\"inner\">Find</div>\n                                </button>\n                            </div>\n                            <FormikErrorMessage component=\"div\" className=\"wrapper__not-found\" name=\"charName\" />\n                        </Form>\n                    )}\n            </Formik>\n            {results()}\n            {loadingMessage}\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default CharSearch;"],"mappings":"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"},"metadata":{},"sourceType":"module"}