{"ast":null,"code":"var _s = $RefreshSig$();\nimport useHttp from \"../hooks/http.hook\";\nconst useMarvelService = () => {\n  _s();\n  const {\n    request,\n    clearError,\n    process,\n    setProcess\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=ee5953dc31f3d6f456feeaafb26f8003';\n  const _baseOffset = 180;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n  const getComic = async id => {\n    const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(comics => _transformComics(comics));\n  };\n  const getCharacterByName = async name => {\n    try {\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n      return _transformCharacter(res.data.results[0], false);\n    } catch (e) {\n      return 'not found';\n    }\n  };\n  const _transformCharacter = function (char) {\n    let limitLetters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let charDescription = char.description ? char.description : \"Unfortunately, we can't find the description of this character\";\n    if (charDescription.length >= 200 && limitLetters) {\n      charDescription = charDescription.slice(0, 200) + '...';\n    }\n    return {\n      comics: char.comics.items,\n      id: char.id,\n      name: char.name,\n      description: charDescription,\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url\n    };\n  };\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      name: comics.title,\n      description: comics.description ? comics.description : 'There is no description of this comic',\n      pageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No information about the number of the pages',\n      url: comics.urls[0].url,\n      price: comics.prices[0].price,\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-rus'\n    };\n  };\n  return {\n    process,\n    setProcess,\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    clearError,\n    getComic,\n    getCharacterByName\n  };\n};\n_s(useMarvelService, \"xEV6YTgzPW0BmMp4Z07MiiD4fBk=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","request","clearError","process","setProcess","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","getComic","_transformComics","getAllComics","comics","getCharacterByName","name","e","char","limitLetters","charDescription","description","length","slice","items","thumbnail","path","extension","homepage","urls","url","wiki","title","pageCount","price","prices","language","textObjects"],"sources":["/Applications/MAMP/htdocs/React-Marvel/src/services/service.js"],"sourcesContent":["import useHttp from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=ee5953dc31f3d6f456feeaafb26f8003';\n    const _baseOffset = 180;\n\n    \n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\n        return res.data.results.map(comics => _transformComics(comics));\n    }\n\n    const getCharacterByName = async (name) => {\n        try {\n            const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\n            return _transformCharacter(res.data.results[0], false);\n        } catch (e) {\n           return 'not found';\n        }\n    }\n\n    const _transformCharacter = (char, limitLetters = true) => {\n\n        let charDescription = char.description ? char.description : \"Unfortunately, we can't find the description of this character\"; \n\n        if (charDescription.length >= 200 && limitLetters) {\n            charDescription = charDescription.slice(0, 200) + '...';\n        }\n\n        return {\n            comics: char.comics.items,\n            id: char.id,\n            name: char.name,\n            description: charDescription,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            name: comics.title,\n            description: comics.description ? comics.description : 'There is no description of this comic' ,\n            pageCount: comics.pageCount ?  `${comics.pageCount} pages` : 'No information about the number of the pages',\n            url: comics.urls[0].url,\n            price: comics.prices[0].price,\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-rus'\n        }\n    }\n\n    return {\n        process,\n        setProcess,\n        getAllCharacters, \n        getCharacter, \n        getAllComics, \n        clearError, \n        getComic, \n        getCharacterByName}\n\n}\n\nexport default useMarvelService;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,oBAAoB;AAExC,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAE3B,MAAM;IAACC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGL,OAAO,EAAE;EAE5D,MAAMM,QAAQ,GAAG,2CAA2C;EAC5D,MAAMC,OAAO,GAAG,yCAAyC;EACzD,MAAMC,WAAW,GAAG,GAAG;EAGvB,MAAMC,gBAAgB,GAAG,kBAAgC;IAAA,IAAzBC,MAAM,uEAAGF,WAAW;IAChD,MAAMG,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEI,QAAS,6BAA4BI,MAAO,IAAGH,OAAQ,EAAC,CAAC;IACtF,OAAOI,GAAG,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAAC;EACpD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMN,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEI,QAAS,eAAcW,EAAG,IAAGV,OAAQ,EAAC,CAAC;IACpE,OAAOQ,mBAAmB,CAACJ,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAOD,EAAE,IAAK;IAC3B,MAAMN,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEI,QAAS,WAAUW,EAAG,IAAGV,OAAQ,EAAC,CAAC;IAChE,OAAOY,gBAAgB,CAACR,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMO,YAAY,GAAG,kBAAgC;IAAA,IAAzBV,MAAM,uEAAGF,WAAW;IAC5C,MAAMG,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEI,QAAS,yBAAwBI,MAAO,IAAGH,OAAQ,EAAC,CAAC;IAClF,OAAOI,GAAG,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACO,MAAM,IAAIF,gBAAgB,CAACE,MAAM,CAAC,CAAC;EACnE,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAOC,IAAI,IAAK;IACvC,IAAI;MACA,MAAMZ,GAAG,GAAG,MAAMT,OAAO,CAAE,GAAEI,QAAS,mBAAkBiB,IAAK,IAAGhB,OAAQ,EAAC,CAAC;MAC1E,OAAOQ,mBAAmB,CAACJ,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IAC1D,CAAC,CAAC,OAAOW,CAAC,EAAE;MACT,OAAO,WAAW;IACrB;EACJ,CAAC;EAED,MAAMT,mBAAmB,GAAG,UAACU,IAAI,EAA0B;IAAA,IAAxBC,YAAY,uEAAG,IAAI;IAElD,IAAIC,eAAe,GAAGF,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACG,WAAW,GAAG,gEAAgE;IAE5H,IAAID,eAAe,CAACE,MAAM,IAAI,GAAG,IAAIH,YAAY,EAAE;MAC/CC,eAAe,GAAGA,eAAe,CAACG,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;IAC3D;IAEA,OAAO;MACHT,MAAM,EAAEI,IAAI,CAACJ,MAAM,CAACU,KAAK;MACzBd,EAAE,EAAEQ,IAAI,CAACR,EAAE;MACXM,IAAI,EAAEE,IAAI,CAACF,IAAI;MACfK,WAAW,EAAED,eAAe;MAC5BK,SAAS,EAAEP,IAAI,CAACO,SAAS,CAACC,IAAI,GAAG,GAAG,GAAGR,IAAI,CAACO,SAAS,CAACE,SAAS;MAC/DC,QAAQ,EAAEV,IAAI,CAACW,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MAC1BC,IAAI,EAAEb,IAAI,CAACW,IAAI,CAAC,CAAC,CAAC,CAACC;IACvB,CAAC;EACL,CAAC;EAED,MAAMlB,gBAAgB,GAAIE,MAAM,IAAK;IACjC,OAAO;MACHJ,EAAE,EAAEI,MAAM,CAACJ,EAAE;MACbM,IAAI,EAAEF,MAAM,CAACkB,KAAK;MAClBX,WAAW,EAAEP,MAAM,CAACO,WAAW,GAAGP,MAAM,CAACO,WAAW,GAAG,uCAAuC;MAC9FY,SAAS,EAAEnB,MAAM,CAACmB,SAAS,GAAK,GAAEnB,MAAM,CAACmB,SAAU,QAAO,GAAG,8CAA8C;MAC3GH,GAAG,EAAEhB,MAAM,CAACe,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MACvBI,KAAK,EAAEpB,MAAM,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACD,KAAK;MAC7BT,SAAS,EAAEX,MAAM,CAACW,SAAS,CAACC,IAAI,GAAG,GAAG,GAAGZ,MAAM,CAACW,SAAS,CAACE,SAAS;MACnES,QAAQ,EAAEtB,MAAM,CAACuB,WAAW,CAACD,QAAQ,IAAI;IAC7C,CAAC;EACL,CAAC;EAED,OAAO;IACHvC,OAAO;IACPC,UAAU;IACVI,gBAAgB;IAChBO,YAAY;IACZI,YAAY;IACZjB,UAAU;IACVe,QAAQ;IACRI;EAAkB,CAAC;AAE3B,CAAC;AAAA,GAhFKrB,gBAAgB;EAAA,QAEiCD,OAAO;AAAA;AAgF9D,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module"}